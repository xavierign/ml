y <- match(as.matrix(x[13]),
names(pred.tree)[order(x[1:12], decreasing=T)]
)
y
pred <- predict(md, newdata=dval)
pred <- matrix(pred, ncol=12, byrow=T)
colnames(pred) <- names_con
pred <- cbind.data.frame(pred,country = trainDS.v$country_destination)
head(pred)
dim(pred)
ank.countries <- function (x) {
y <- match(as.matrix(x[13]),
names(pred.tree)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred.tree,1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
head(pred.tree)
head(pred)
result <- apply(pred,1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
class(predd)
class(pred)
class(pred.tree)
class(pred.tree$US)
class(pred$US)
rank.countries <- function (x) {
y <- match(as.matrix(x[13]),
names(pred)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred,1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
dim(pred)
dim(pred.tree)
class(result)
result <- apply(pred[1,],1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
result
result <- apply(pred[1:2,],1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
result
result <- apply(pred,1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
head(pred.tree)
head(pred)
result <- apply(pred[1:5,],1,rank.countries)
result
x <- pred[1,]
x
as.matrix(x[13])
match(as.matrix(x[13]),
names(pred)[order(x[1:12], decreasing=T)]
)
rank.countries <- function (x) {
y <- match(x[13],
names(pred)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred[1,],1,rank.countries)
result
order(x[1:12]
)
order(x[1:12], decreasing=T)
rank.countries <- function (x) {
y <- match(x[13],
colnames(pred)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred[1,],1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
rank.countries <- function (x) {
y <- match(x[13],
colnames(pred)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred,1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
x <- pred[1,]
y <- match(x[13],
colnames(pred)[order(x[1:12], decreasing=T)]
)
y
y <- match(as.matrix(x[13]),
colnames(pred)[order(x[1:12], decreasing=T)]
)
y
rank.countries <- function (x) {
y <- match(as.matrix(x[13]),
colnames(pred)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred[1:2,],1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
rank.countries <- function (x) {
y <- match(as.matrix(x[13]),
colnames(pred)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred[1:2,],1,rank.countries)
result
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
rank.countries <- function (x) {
print(as.matrix(x[13]))
print(order(x[1:12], decreasing=T))
colnames(pred)
print(colnames(pred)[order(x[1:12], decreasing=T)])
y <- match(as.matrix(x[13]),
colnames(pred)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred[1:2,],1,rank.countries)
result
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
rank.countries <- function (x) {
print(as.matrix(x[13]))
print(order(x[1:12], decreasing=T))
print(colnames(pred))
print(colnames(pred)[order(x[1:12], decreasing=T)])
y <- match(as.matrix(x[13]),
colnames(pred)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred[1:2,],1,rank.countries)
result
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
colnames(pred)
rank.countries <- function (x) {
print(as.matrix(x[13]))
print(order(x[1:12], decreasing=T))
print(colnames(pred))
print(colnames(pred)[order(x[1:12], decreasing=T)])
y <- match(as.matrix(x[13]),
colnames(x)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred[1:2,],1,rank.countries)
result
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
rank.countries <- function (x) {
print(as.matrix(x[13]))
print(order(x[1:12], decreasing=T))
print(colnames(pred))
print(colnames(pred)[order(x[1:12], decreasing=T)])
y <- match(as.matrix(x[13]),
colnames(pred)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred[1:2,],1,rank.countries)
result
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
rank.countries <- function (x) {
print(as.matrix(x[13]))
print(x[1:12])
print(order(x[1:12], decreasing=T))
print(colnames(pred))
print(colnames(pred)[order(x[1:12], decreasing=T)])
y <- match(as.matrix(x[13]),
colnames(pred)[order(x[1:12], decreasing=T)]
)
return(y)
}
result <- apply(pred[1:2,],1,rank.countries)
result
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
rank.countries <- function (x) {
print(as.matrix(x[13]))
print(x[1:12])
print(order(x[1:12], decreasing=T))
print(colnames(pred))
print(colnames(pred)[order(x[1:12], decreasing=T)])
y <- match(as.matrix(x[13]),
colnames(pred)[order(as.numeric(x[1:12]), decreasing=T)]
)
return(y)
}
result <- apply(pred[1:2,],1,rank.countries)
result
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
rank.countries <- function (x) {
#print(as.matrix(x[13]))
#print(x[1:12])
#print(order(x[1:12], decreasing=T))
#print(colnames(pred))
#print(colnames(pred)[order(x[1:12], decreasing=T)])
y <- match(as.matrix(x[13]),
colnames(pred)[order(as.numeric(x[1:12]), decreasing=T)]
)
return(y)
}
result <- apply(pred[1:2,],1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
rank.countries <- function (x) {
#print(as.matrix(x[13]))
#print(x[1:12])
#print(order(x[1:12], decreasing=T))
#print(colnames(pred))
#print(colnames(pred)[order(x[1:12], decreasing=T)])
y <- match(as.matrix(x[13]),
colnames(pred)[order(as.numeric(x[1:12]), decreasing=T)]
)
return(y)
}
result <- apply(pred,1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
md <-xgb.train(data=dtrain,
params = param,
nround = 140,
watchlist = list(train=dtrain,test=dval),
nthread=6)
#bst <- xgboost(data = dtrain, nrounds = 2)
pred <- predict(md, newdata=dval)
pred <- matrix(pred, ncol=12, byrow=T)
colnames(pred) <- names_con
pred <- cbind.data.frame(pred,country = trainDS.v$country_destination)
rank.countries <- function (x) {
y <- match(as.matrix(x[13]),
colnames(pred)[order(as.numeric(x[1:12]), decreasing=T)]
)
return(y)
}
result <- apply(pred,1,rank.countries)
print(mean(c(1/log2(result[result<6]+1),rep(0,sum(result>=6)))))
pred <- predict(md, newdata=dtest)
pred <- matrix(pred, ncol=12, byrow=T)
pred<- cbind.data.frame(pred,testDS$id)
res <- data.frame(id=character(),country=character())
#x <- pred.tree.test[2,]
rank.countries.2 <- function (x) {
country <- names(x)[order(as.numeric(x[1:12]), decreasing=T)[1:5]]
id <- as.matrix(x[13])
res.temp <- data.frame(rep(id,5), country)
#res <<- rbind.data.frame(res,res.temp)
return (c(id, unlist(country)))
}
result <- apply(pred,1,rank.countries.2)
result <- t(result)
res <- result[,c(1,2)]
res <- rbind.data.frame( res, result[,c(1,3)])
res <- rbind.data.frame( res, result[,c(1,4)])
res <- rbind.data.frame( res, result[,c(1,5)])
res <- rbind.data.frame( res, result[,c(1,6)])
names(res) <- c('id','country')
res
head(pred)
colnames(pred) <- names_con
head(pred)
pred <- predict(md, newdata=dtest)
pred <- matrix(pred, ncol=12, byrow=T)
colnames(pred) <- names_con
pred<- cbind.data.frame(pred,testDS$id)
head(pred)
res <- data.frame(id=character(),country=character())
#x <- pred.tree.test[2,]
rank.countries.2 <- function (x) {
country <- colnames(x)[order(as.numeric(x[1:12]), decreasing=T)[1:5]]
id <- as.matrix(x[13])
res.temp <- data.frame(rep(id,5), country)
#res <<- rbind.data.frame(res,res.temp)
return (c(id, unlist(country)))
}
result <- apply(pred,1,rank.countries.2)
result <- t(result)
res <- result[,c(1,2)]
res <- rbind.data.frame( res, result[,c(1,3)])
res <- rbind.data.frame( res, result[,c(1,4)])
res <- rbind.data.frame( res, result[,c(1,5)])
res <- rbind.data.frame( res, result[,c(1,6)])
names(res) <- c('id','country')
pred
head(pred)
colnames(x)
x <- pred[1,]
x
country <- colnames(x)[order(as.numeric(x[1:12]), decreasing=T)[1:5]]
id <- as.matrix(x[13])
res.temp <- data.frame(rep(id,5), country)
#res <<- rbind.data.frame(res,res.temp)
res.temp
c(id, unlist(country))
result <- apply(pred,1,rank.countries.2)
id
country
res <- data.frame(id=character(),country=character())
#x <- pred.tree.test[2,]
rank.countries.2 <- function (x) {
country <- colnames(x)[order(as.numeric(x[1:12]), decreasing=T)[1:5]]
id <- as.matrix(x[13])
#res.temp <- data.frame(rep(id,5), country)
#res <<- rbind.data.frame(res,res.temp)
return (c(id, unlist(country)))
}
result <- apply(pred,1,rank.countries.2)
result <- t(result)
res <- result[,c(1,2)]
res <- rbind.data.frame( res, result[,c(1,3)])
res <- rbind.data.frame( res, result[,c(1,4)])
res <- rbind.data.frame( res, result[,c(1,5)])
res <- rbind.data.frame( res, result[,c(1,6)])
names(res) <- c('id','country')
result <- apply(pred,1,rank.countries.2)
result
head(result)
result <- apply(pred,1,rank.countries.2)
head(result)
dim(result)
length(result)
x <- pred[1,]
x
country <- colnames(x)[order(as.numeric(x[1:12]), decreasing=T)[1:5]]
id <- as.matrix(x[13])
country
id
c(id, unlist(country))
rank.countries.2 <- function (x) {
country <- colnames(x)[order(as.numeric(x[1:12]), decreasing=T)[1:5]]
id <- as.matrix(x[13])
#res.temp <- data.frame(rep(id,5), country)
#res <<- rbind.data.frame(res,res.temp)
return (c(id, unlist(country)))
}
result <- apply(pred,1,rank.countries.2)
result
rank.countries.2 <- function (x) {
country <- colnames(x)[order(as.numeric(x[1:12]), decreasing=T)[1:5]]
id <- as.matrix(x[13])
print(country)
print(id)
#res.temp <- data.frame(rep(id,5), country)
#res <<- rbind.data.frame(res,res.temp)
return (c(id, unlist(country)))
}
result <- apply(pred[1:2,],1,rank.countries.2)
rank.countries.2 <- function (x) {
print(colnames(x))
country <- colnames(x)[order(as.numeric(x[1:12]), decreasing=T)[1:5]]
id <- as.matrix(x[13])
print(country)
print(id)
#res.temp <- data.frame(rep(id,5), country)
#res <<- rbind.data.frame(res,res.temp)
return (c(id, unlist(country)))
}
result <- apply(pred[1:2,],1,rank.countries.2)
#x <- pred.tree.test[2,]
rank.countries.2 <- function (x) {
print(colnames(x))
country <- colnames(pred)[order(as.numeric(x[1:12]), decreasing=T)[1:5]]
id <- as.matrix(x[13])
print(country)
print(id)
#res.temp <- data.frame(rep(id,5), country)
#res <<- rbind.data.frame(res,res.temp)
return (c(id, unlist(country)))
}
result <- apply(pred[1:2,],1,rank.countries.2)
result
rank.countries.2 <- function (x) {
print(colnames(x))
country <- colnames(pred)[order(as.numeric(x[1:12]), decreasing=T)[1:5]]
id <- as.matrix(x[13])
print(country)
print(id)
#res.temp <- data.frame(rep(id,5), country)
#res <<- rbind.data.frame(res,res.temp)
return (c(id, unlist(country)))
}
result <- apply(pred,1,rank.countries.2)
result <- t(result)
res <- result[,c(1,2)]
res <- rbind.data.frame( res, result[,c(1,3)])
res <- rbind.data.frame( res, result[,c(1,4)])
res <- rbind.data.frame( res, result[,c(1,5)])
res <- rbind.data.frame( res, result[,c(1,6)])
names(res) <- c('id','country')
outfile1 <- paste("out_all",train.all,"_cp",cp.i,"_nb",nb.i,".csv",sep="", collapse="")
outfile1 <- paste(indir,outfile1, sep="")
write.csv (res[order(res$id),], outfile1,quote = F, row.names=F)
outfile1 <- "xgboost.csc"
outfile1 <- paste(indir,outfile1, sep="")
write.csv (res[order(res$id),], outfile1,quote = F, row.names=F)
```{r fig.width=3, fig.height=2, echo=FALSE, fig.align='right',fig.cap='Figure 1', cache=FALSE, message=FALSE, warning=FALSE}
![Caption for the picture.](/inter.png)
rm(list = ls()); gc();
rm(list=ls())
install.packages("ggplot2")
library(ggplot2)
x <- rnorm(50)
x
ggplot() + geom_histogram(aes(x = x))
ggplot() + geom_histogram(aes(x = x), binwidth = 0.1)
x <- rnorm(500)
ggplot() + geom_histogram(aes(x = x), binwidth = 0.1)
length(x)
my.data <- rnorm(1000)
ggplot() + geom_histogram(aes(x = my.data), bin.width = 0.1)
ggplot() + geom_histogram(aes(x = my.data), binwidth = 0.1)
ggplot() + geom_histogram(aes(x = my.data), bins = 20)
ggplot() + geom_histogram(aes(x = my.data), bins = 230)
ggplot() + geom_histogram(aes(x = my.data), bins = 30)
ggplot() + geom_histogram(aes(x = my.data), bins = 60)
ggplot() + geom_histogram(aes(x = my.data), bins = 30, color = "blue")
ggplot() + geom_histogram(aes(x = my.data), bins = 30, color = "blue", fill = "blue")
ggplot() + geom_histogram(aes(x = my.data), bins = 30, fill = "blue")
ggplot() + geom_histogram(aes(x = my.data), bins = 30, fill = "blue", alpha = 0.5)
ggplot() + geom_histogram(aes(x = my.data), bins = 30, fill = "blue", alpha = 0.3)
ggplot() + geom_histogram(aes(x = my.data), bins = 30, fill = "blue", alpha = 0.3) + geom_density()
ggplot() + geom_histogram(aes(x = my.data), bins = 30, fill = "blue", alpha = 0.3) + geom_density(aes(x = my.data))
ggplot() + geom_density(aes(x = my.data))
ggplot() + geom_density(aes(x = my.data), fill = "green")
ggplot() + geom_density(aes(x = my.data), fill = "green", color = "blue")
ggplot() + geom_density(aes(x = my.data), fill = "green", color = "blue") + ggtitle("My Plot")
p <- ggplot() + geom_density(aes(x = my.data), fill = "green", color = "blue") + ggtitle("My Plot")
p
p + ylab("My Label")
p
p + coord_cartesian(xlim = c(2,3))
p + coord_cartesian(xlim = c(2,3)) + ggtitle("My Zoomed In Plot")
p
p + coord_cartesian(xlim = c(2,3)) + ggtitle("My Zoomed In Plot") + xlab("Data") + ylab("Density")
ggplot() + geom_density(aes(x = my.data), fill = "green", color = "blue") + ggtitle("My Plot")
ggplot() + geom_histogram(aes(x = my.data), fill = "green", color = "blue") + ggtitle("My Plot")
ggplot() + geom_violin(aes(x = my.data), fill = "green", color = "blue") + ggtitle("My Plot")
x <- seq(-10, 10, 0.1)
x
y <- x * 3 + x^2 + sin(x) - cos(x) + rnorm(length(x), sd = 3)
ggplot() + geom_point(aes(x = x, y = y))
x <- seq(-3, 3, 0.1)
y <- x * 3 + x^2 + sin(x) - cos(x) + rnorm(length(x), sd = 3)
x <- seq(-3, 3, 0.1)
y <- x * 3 + x^2 + sin(x) - cos(x) + rnorm(length(x), sd = 3)
ggplot() + geom_point(aes(x = x, y = y))
ggplot() + geom_point(aes(x = x, y = y)) + geom_smooth(aes(x = x, y = y))
ggplot() + geom_point(aes(x = x, y = y)) + geom_smooth(aes(x = x, y = y), method = lm)
ggplot() + geom_point(aes(x = x, y = y)) + geom_smooth(aes(x = x, y = y), method = loess)
sleep <- rnorm(100, mean = 6, sd = 1)
grade <- sleep + sleep ^ 2 / 10 + rnorm(100, sd = 5)
df <- data.frame(sleep, grade)
df
ggplot(data = df, aes(x = sleep, y = grade)) + geom_point()
grade <- sleep + sleep ^ 2 / 10 + rnorm(100, sd = 1)
df <- data.frame(sleep, grade)
ggplot(data = df, aes(x = sleep, y = grade)) + geom_point()
ggplot(data = df, aes(x = sleep, y = grade)) + geom_point() + geom_smooth()
?seq
?rep
rep.int(c(0, 1), c(50, 50))
rep <- rep.int(c(0, 1), c(50, 50))
class <- rep.int(c(0, 1), c(50, 50))
x <- runif(100, min = 10, max = 20)
x
y <- 5 * x + 40 + rnorm(100) + class * -2 * x
class <- rep.int(c(10, -10), c(2, 3))
class
class <- rep.int(c(0, 1), c(50, 50))
df <- data.frame(df, aes(x = x, y = y))
df <- data.frame(input = x, output = y, condition = class)
df
ggplot(df, aes(x = input, y = output))
ggplot(df, aes(x = input, y = output)) + geom_point()
ggplot(df, aes(x = input, y = output)) + geom_point() + facet_grid(. ~ condition)
ggplot(df, aes(x = input, y = output)) + geom_point() + facet_grid(. ~ condition) + geom_smooth()
ggplot(df, aes(x = input, y = output)) + geom_point() + geom_smooth()
ggplot(df, aes(x = input, y = output)) + geom_point() + facet_grid(. ~ condition) + geom_smooth()
y <- 5 * x + 40 + rnorm(100, sd = 10) + class * -2 * x
df <- data.frame(input = x, output = y, condition = class)
rm(list = ls()); gc();
library(dummies)
library(xgboost)
data_pre <- read.csv2('data_pre.csv',sep="," )
quiz_pre <- read.csv2('quiz_pre.csv',sep="," )
setwd("~/Documents/Kaggle/ML")
data_pre <- read.csv2('data_pre.csv',sep="," )
quiz_pre <- read.csv2('quiz_pre.csv',sep="," )
summary(data_pre)
data <- read.csv2('data.csv',sep="," )
quiz <- read.csv2('quiz.csv',sep="," )
data
summary(data)
summary(data[,c(2  ,   7  ,  16  ,  17    ,18   , 19  ,  20  ,  21 ,   22  ,  23 ,   24    ,25    ,26,    27 ,   28  ,  29 ,   30  ,  31,
,  32  ,  33  ,  34  ,  35   , 36   , 37   , 38  ,  39  ,  40  ,  41,    42  ,  43  ,  44 ,   48  ,  49   , 50  ,  51    ,52)
])
summary(data[,c(2  ,   7  ,  16  ,  17    ,18   , 19  ,  20  ,  21 ,   22  ,  23 ,   24    ,25    ,26,    27 ,   28  ,  29 ,   30  ,  31,
32  ,  33  ,  34  ,  35   , 36   , 37   , 38  ,  39  ,  40  ,  41,    42  ,  43  ,  44 ,   48  ,  49   , 50  ,  51    ,52)
])
summary(quiz[,c(2  ,   7  ,  16  ,  17    ,18   , 19  ,  20  ,  21 ,   22  ,  23 ,   24    ,25    ,26,    27 ,   28  ,  29 ,   30  ,  31,
32  ,  33  ,  34  ,  35   , 36   , 37   , 38  ,  39  ,  40  ,  41,    42  ,  43  ,  44 ,   48  ,  49   , 50  ,  51    ,52)])
summary(data)
summay(data[,c(2, 7 ,16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51)])
summray(data[,c(2, 7 ,16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51)])
summary(data[,c(2, 7 ,16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51)])
summary(data[,c(2, 7 ,16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51)]
length(c(2, 7 ,16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51))
23*23
20 * 20
summary(data[,c(2, 7 ,16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51)]º
summary(data[,45])
summary(data[,c(2, 7 ,16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51)]º
summary(data[,c(2, 7 ,16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51)])
summary(data)
summary(data[,c(2, 7 ,16 ,17, 19, 22, 23, 25, 26, 27, 28, 29, 37, 40, 41, 43, 44, 48, 49, 50, 51)])
